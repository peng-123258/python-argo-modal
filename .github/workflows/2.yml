name: Deploy 3 Independent Apps

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_file:
          - "to_app.py"
          - "ysl_app.py"
          - "ny_app.py"
      # 一个实例部署失败不影响其他实例
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'  # 缓存依赖，加速部署

      - name: Install dependencies
        run: pip install modal
        timeout-minutes: 5  # 超时保护

      - name: Authenticate Modal
        run: |
          modal token set --token-id ${{ secrets.MODAL_TOKEN_ID }} --token-secret ${{ secrets.MODAL_TOKEN_SECRET }}
          # 验证认证是否成功
          modal profile current || exit 1
        timeout-minutes: 3  # 缩短认证超时时间

      - name: Stop existing app (clean deploy)
        run: |
          APP_NAME=$(echo ${{ matrix.app_file }} | sed 's/.py//')
          # 尝试停止旧版本，不存在则忽略错误
          modal app stop $APP_NAME || echo "No existing app $APP_NAME to stop"
        timeout-minutes: 5

      - name: Deploy ${{ matrix.app_file }}
        run: |
          APP_NAME=$(echo ${{ matrix.app_file }} | sed 's/.py//')
          echo "部署应用: $APP_NAME"
          # 增加部署日志详细度
          modal deploy --detach ${{ matrix.app_file }}
          # 等待部署完成并验证
          modal app wait $APP_NAME --timeout 300
        timeout-minutes: 10  # 部署超时设置

      - name: Get deployment details
        run: |
          APP_NAME=$(echo ${{ matrix.app_file }} | sed 's/.py//')
          # 获取应用详细信息（包含服务端点）
          modal app get $APP_NAME
        timeout-minutes: 3

      - name: Output URL for ${{ matrix.app_file }}
        run: |
          APP_NAME=$(echo ${{ matrix.app_file }} | sed 's/.py//')
          USER_NAME=${{ secrets/.ODAL_USER_NAME }}
          # 生成准确的访问地址（根据实际函数名调整，这里假设函数名为web_server）
          echo "✅ $APP_NAME 部署完成"
          echo "访问地址: https://${USER_NAME}--${APP_NAME}-web_server.modal.run"
          # 将URL存入变量，方便后续步骤使用（如通知）
          echo "APP_URL=https://${USER_NAME}--${APP_NAME}-web_server.modal.run" >> $GITHUB_ENV

      - name: Notify deployment result (optional)
        if: always()
        run: |
          echo "部署状态: ${{ job.status }}"
          echo "应用: ${{ matrix.app_file }}"
          echo "URL: ${{ env.APP_URL }}"
          # 可在此处添加通知逻辑（如发送到Slack/Teams）
